//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package com.qsoft.ondio.restservice;

import com.qsoft.ondio.model.JsonFeedResponse;
import com.qsoft.ondio.model.JsonProfileResponse;
import com.qsoft.ondio.model.User;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;
import org.springframework.web.client.RestTemplate;

import java.util.Collections;

public class MyRestService_
        implements MyRestService
{

    private RestTemplate restTemplate;
    private String rootUrl;

    public MyRestService_()
    {
        restTemplate = new RestTemplate();
        restTemplate.getMessageConverters().add(new MappingJackson2HttpMessageConverter());
        rootUrl = "http://192.168.1.222/testing/ica467/trunk/public";
    }

    @Override
    public RestTemplate getRestTemplate()
    {
        return restTemplate;
    }

    @Override
    public JsonFeedResponse getHomeFeed()
    {
        HttpHeaders httpHeaders = new HttpHeaders();
        httpHeaders.setAccept(Collections.singletonList(MediaType.parseMediaType("application/json")));
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange(rootUrl.concat("/home-rest"), HttpMethod.GET, requestEntity, JsonFeedResponse.class).getBody();
    }

    @Override
    public JsonProfileResponse getProfile(String account_id)
    {
        java.util.HashMap<String, Object> urlVariables = new java.util.HashMap<String, Object>();
        urlVariables.put("account_id", account_id);
        HttpHeaders httpHeaders = new HttpHeaders();
        httpHeaders.setAccept(Collections.singletonList(MediaType.parseMediaType("application/json")));
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange(rootUrl.concat("/user-rest/{account_id}"), HttpMethod.GET, requestEntity, JsonProfileResponse.class, urlVariables).getBody();
    }

    @Override
    public User login(java.util.HashMap name)
    {
        HttpHeaders httpHeaders = new HttpHeaders();
        httpHeaders.setAccept(Collections.singletonList(MediaType.parseMediaType("application/json")));
        HttpEntity<java.util.HashMap> requestEntity = new HttpEntity<java.util.HashMap>(name, httpHeaders);
        return restTemplate.exchange(rootUrl.concat("/auth-rest"), HttpMethod.POST, requestEntity, User.class).getBody();
    }

}
